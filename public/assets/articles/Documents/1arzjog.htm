<h3 id="introductions">Introductions</h3>
<p>首先 Jenkins 要吐槽一下，Jenkins 的 Logo 真的是太丑了，虽然很明显是一个管家形象- -</p>
<p><img src="../../img/20181119145558.png" alt=""></p>
<p>Jenkins 的默认 UI 也有点丑，还不如官网的 UI 好看</p>
<p>但是不影响这玩意的强大表现</p>
<h3 id="installation-on-centos">Installation on CentOS</h3>
<h4 id="fetch-yum-repo">Fetch yum repo</h4>
<p>Add the Jenkins repository to the yum repos, and install Jenkins from here.</p>
<p>There is also <a href="http://pkg.jenkins-ci.org/redhat-stable/">a LTS YUM repository</a> for the <a href="https://wiki.jenkins.io/display/JENKINS/LTS+Release+Line">LTS Release Line</a></p>
<ul>
<li><code>sudo wget -O /etc/yum.repos.d/jenkins.repo</code> <code>http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo</code></li>
<li><code>sudo rpm --import</code> <code>https://jenkins-ci.org/redhat/jenkins-ci.org.key</code></li>
<li><code>sudo yum install jenkins</code></li>
</ul>
<h4 id="installation-of-java">Installation of Java</h4>
<p>Jenkins requires Java in order to run, yet certain distros don&#39;t include this by default. To install the Open Java Development Kit (OpenJDK) run the following:</p>
<pre><code class="hljs language-bash">$ sudo yum install java
</code></pre>
<p><strong>Note:</strong> If running CentOS, ensure you follow the <a href="https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Red+Hat+distributions#InstallingJenkinsonRedHatdistributions-ImportantNoteonCentOSJava">guide below</a>.</p>
<h4 id="startstop">Start/Stop</h4>
<ul>
<li><code>sudo service jenkins start/stop/restart</code></li>
<li><code>sudo chkconfig jenkins on</code></li>
</ul>
<p><strong>Note:</strong> if you get the following error message, ensure that Java has been installed:</p>
<pre><code class="hljs language-bash">Starting jenkins (via systemctl):  Job `<span class="hljs-keyword">for</span>` jenkins.service failed. See `<span class="hljs-string">&#x27;systemctl status jenkins.service&#x27;</span>` and `<span class="hljs-string">&#x27;journalctl -xn&#x27;</span>` `<span class="hljs-keyword">for</span>` details.[FAILED]
</code></pre>
<h4 id="what-does-this-package-do">What does this package do?</h4>
<ul>
<li>Jenkins will be launched as a daemon on startup. See <code>/etc/init.d/jenkins</code> for more details.</li>
<li>The &#39;<code>jenkins</code>&#39; user is created to run this service. If you change this to a different user via the config file, you must change the owner of /var/log/jenkins, /var/lib/jenkins, and /var/cache/jenkins.</li>
<li>Log file will be placed in <code>/var/log/jenkins/jenkins.log</code>. Check this file if you are troubleshooting Jenkins.</li>
<li><code>/etc/sysconfig/jenkins</code> will capture configuration parameters for the launch.</li>
<li>By default, Jenkins listen on port 8080. Access this port with your browser to start configuration. Note that the built-in firewall may have to be opened to access this port from other computers. (See <a href="http://www.cyberciti.biz/faq/disable-linux-firewall-under-centos-rhel-fedora/">http://www.cyberciti.biz/faq/disable-linux-firewall-under-centos-rhel-fedora/</a> for instructions how to disable the firewall permanently)</li>
<li>A Jenkins RPM repository is added in <code>/etc/yum.repos.d/jenkins.repo</code></li>
</ul>
<blockquote>
<p><strong>Notice</strong>:</p>
<ul>
<li>可以在<code>/etc/sysconfig/jenkins</code>这个路径下找到 Jenkins 的配置文件</li>
<li>要在 CentOS 下支持 Jenkins，请不要使用 JDK，要安装 OpenJDK</li>
</ul>
</blockquote>
<h4 id="more-change-jenkins-run-as-with-root">More: change Jenkins run as with root</h4>
<p>在 Jenkins 中运行 shell 脚本经常遇到权限问题，解决起来非常麻烦，我们索性来个终极解决办法，就是给 jenkins 一个 root 权限，这样就不会再遇到权限问题了。</p>
<ol>
<li><p><code>vim /etc/sysconfig/jenkins</code></p>
</li>
<li><p>找到 JENKINS_USER 改为 “root”:</p>
</li>
</ol>
<pre><code>JENKINS_USER=&quot;root&quot;
</code></pre>
<p>3)然后更改 Jenkins home，webroot 和日志的所有权：</p>
<pre><code class="hljs language-bash">$ <span class="hljs-built_in">chown</span> -R root:root /var/lib/jenkins
$ <span class="hljs-built_in">chown</span> -R root:root /var/cache/jenkins
$ <span class="hljs-built_in">chown</span> -R root:root /var/log/jenkins
</code></pre>
<p>4).重新启动 Jenkins 并检查用户是否已被更改</p>
<pre><code class="hljs language-bash">$ service jenkins restart
</code></pre>
<p>这样我们就给 jenkins 设置了 root 权限，我们再运行 shell 脚本就不会提示权限问题了。</p>
<h4 id="wiki">Wiki</h4>
<p><a href="https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Red+Hat+distributions">https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Red+Hat+distributions</a></p>
<h3 id="create-your-first-pipline-by-using-github-repo-as-branch-source">Create your first pipline by using github repo as branch source</h3>
<p>To get started quickly with Pipeline:</p>
<ol>
<li>Copy one of the <a href="https://jenkins.io/doc/pipeline/tour/hello-world/#examples">examples below</a> into your repository and name it <code>Jenkinsfile</code></li>
<li>Click the <strong>New Item</strong> menu within Jenkins</li>
<li>Provide a name for your new item (e.g. <strong>My Pipeline</strong>) and select <strong>Multibranch Pipeline</strong></li>
<li>Click the <strong>Add Source</strong> button, choose the type of repository you want to use and fill in the details.</li>
<li>Click the <strong>Save</strong> button and watch your first Pipeline run!</li>
</ol>
<p><img src="../../img/20181119184317.png" alt=""></p>
<p>Jinkinsfile:</p>
<pre><code class="hljs language-Jenkinsfile">// Jenkinsfile (Declarative Pipeline)
pipeline {
    agent { docker { image &#x27;maven:3.3.3&#x27; } }
    stages {
        stage(&#x27;build&#x27;) {
            steps {
                sh &#x27;mvn --version&#x27;
            }
        }
    }
}
</code></pre>
<p>Then when the pipline is building, you can see the console output at:</p>
<p><img src="../../img/20181119185023.png" alt=""></p>
