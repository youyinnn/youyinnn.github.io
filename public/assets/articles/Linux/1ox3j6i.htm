<p></p><div class="saying mb-4"><div class="saying-quote saying-left-quote">“</div><div class="saying-quote saying-right-quote">”</div>
前言：之前留下的 17 大创项目总得做点什么，马上就要结题了，我们做的 AR 留影需要将用户照下来的照片生成点云然后合成模型。由此 Escnqh[link:gayhub]找到了使用 PIL+osm-bundler 的解决方案。
</div>


<h3 id="python-photogrammetry-toolkit（ppt）">Python Photogrammetry ToolKit（PPT）</h3>
<p>这玩意是意大利的一个团队开发的一个 Python 图像处理工具包，正是这个工具包提供的 osm-bundler 加上 PIL 构成了一套解决方案。</p>
<p>官网：<a href="http://184.106.205.13/arcteam/ppt.php">http://184.106.205.13/arcteam/ppt.php</a></p>
<h4 id="pil">PIL</h4>
<blockquote>
<p>The Python Imaging Library (PIL) adds image processing capabilities to your Python interpreter. This library supports many file formats, and provides powerful image processing and graphics capabilities.</p>
</blockquote>
<p>简单来说就是 Python 的图像处理库，osm-bundler 基于这个库对图像进行分析。</p>
<p>官网：<a href="http://www.pythonware.com/products/pil/">http://www.pythonware.com/products/pil/</a></p>
<p>但是很坑的一点是，这个项目 09 年就停止维护了，所以安装这个东西异常困难。</p>
<h4 id="pillow">Pillow</h4>
<p>由于 PIL 属于史前神物，无法触碰，安装过程中所需要的组件特别零散，其实这对于 Debian 系的 Linux 系统来说问题并不大，大部分的库使用 apt 就能获取到，但是我的服务器是 CentOS7，属于 Redhat 系的，只有 yum 和 rpm。而开发 PPT 的意大利团队是在 Debian 下开发的，Redhat 下库的获取不一样，所以我还不能按照官方给的思路来进行 PPT 的部署- -///。</p>
<p>于是我找到了 Pillow。</p>
<p>介绍：</p>
<blockquote>
<p>Pillow is the friendly PIL fork by Alex Clark and Contributors. PIL is the Python Imaging Library by Fredrik Lundh and Contributors.</p>
</blockquote>
<p>Pillow 是 PIL 的一个友好的 Fork，而且这个项目在 GitHub 上持续维护。</p>
<p>官网：<a href="http://pillow.readthedocs.io/en/latest/index.html">http://pillow.readthedocs.io/en/latest/index.html</a></p>
<p>hub：<a href="https://github.com/python-pillow/Pillow">https://github.com/python-pillow/Pillow</a></p>
<p>所以说，我可以使用 Pillow 来代替 PIL，这是完全可行的！！</p>
<p>而且 Pillow 的安装异常简单，我们只需要使用 python 系的包管理工具 PIP 就可以一键安装！！！</p>
<h4 id="pip">PIP</h4>
<blockquote>
<p>The PyPA recommended tool for installing Python packages.</p>
</blockquote>
<p>官网：<a href="https://pip.pypa.io/en/stable/">https://pip.pypa.io/en/stable/</a></p>
<hr>
<h3 id="安装-ppt">安装 PPT</h3>
<h4 id="安装-python">安装 Python</h4>
<p>这是一切的大前提，你的系统里需要有 python 环境，但是一般的 linux 都会内置一个，只不过你不要使用版本太低的 python 就好，具体到多少我也不清楚，python 的版本断代真的是傻的不行。</p>
<h4 id="安装-pip">安装 pip</h4>
<p>自己看：<a href="https://packaging.python.org/guides/installing-using-linux-tools/#installing-pip-setuptools-wheel-with-linux-package-managers">https://packaging.python.org/guides/installing-using-linux-tools/#installing-pip-setuptools-wheel-with-linux-package-managers</a></p>
<p>然后需要更新一下 pip</p>
<pre><code class="hljs language-bash">pip install -U pip
</code></pre>
<h4 id="安装-pillow">安装 Pillow</h4>
<p>Installation 页：<a href="http://pillow.readthedocs.io/en/latest/installation.html">http://pillow.readthedocs.io/en/latest/installation.html</a></p>
<p>大概浏览一下这个页面，不要急着一上来就安装 Pillow。</p>
<p>在“External Libraries”一节，它提示我们，在安装 Pillow 之前我们需要安装完运行 Pillow 所需的库。</p>
<p>开发 Pillow 的团队在 hub 的 depends 文件夹下提供了这些库在各种系统下的安装脚本，我们选择 fedora_23.sh 的脚本(fedora 是 RedHat)，但是不要运行这个脚本，我们看它对应的 package 需要安装哪些就好。</p>
<p><img src="../../img/3aef0a673e1639aec3272e205b934971.webp" alt="fedora"></p>
<p>如图最下面一行，在 centos 下就可以执行：</p>
<pre><code class="hljs language-bash">yum install libtiff-devel libjpeg-devel zlib-devel freetype-devel  lcms2-devel libwebp-devel openjpeg2-devel tkinter python3-tkinter  tcl-devel tk-devel harfbuzz-devel fribidi-devel libraqm-devel
</code></pre>
<p><img src="../../img/5e3b4f30ce74fefbc7e2ebfcccb76543.webp" alt="yum"></p>
<p>这些我都安装过了，其中丢失的 python3-tkinter 在 centos 下没有那就不用管了。</p>
<p>这些库安装完之后，我们就可以安装 Pillow 了：</p>
<pre><code class="hljs language-bash">pip install Pillow
</code></pre>
<p>安装完 Pillow 我们来验证一下，我们写一个 test.py 脚本：</p>
<pre><code class="hljs language-python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image
picPath = <span class="hljs-string">&#x27;./card.jpg&#x27;</span>

im = Image.<span class="hljs-built_in">open</span>(picPath)
<span class="hljs-built_in">print</span> im.getbbox()
</code></pre>
<p>和脚本一起有一个 card.jpg 文件，我们使用 Pillow 来分析这个文件，执行：</p>
<pre><code class="hljs language-bash">python test.py
</code></pre>
<p>分析出了数据：</p>
<pre><code class="hljs language-bash">[root@VM_16_214_centos youyinnn]<span class="hljs-comment"># python test.py</span>
(0, 0, 564, 738)
[root@VM_16_214_centos youyinnn]<span class="hljs-comment">#</span>
</code></pre>
<p>说明已经安装成功！</p>
<h4 id="安装-blas-库">安装 BLAS 库</h4>
<p>我们要使用 PPT，除了 PIL 之外，还需要两个重要组件，其中一个便是 BLAS (libblas3gf, libblas-dev) 。</p>
<p>就不介绍了，直接开始安装，在 centos 下的安装比较奇葩，因为 PPT 官网给的包名什么的都是 apt 有的，有的可能 yum 下没有，所以我们需要选择合适的库：</p>
<p>首先把 blas 安装了：</p>
<pre><code class="hljs language-bash">yum install blas
</code></pre>
<p>以上命令在我的主机上会安装&quot;blas-3.4.2-8.el7.x86_64&quot;：</p>
<pre><code class="hljs language-bash">[root@VM_16_214_centos youyinnn]<span class="hljs-comment"># yum install blas</span>
Loaded plugins: fastestmirror, langpacks
Repository epel is listed more than once <span class="hljs-keyword">in</span> the configuration
Loading mirror speeds from cached hostfile
Package blas-3.4.2-8.el7.x86_64 already installed and latest version
Nothing to <span class="hljs-keyword">do</span>
[root@VM_16_214_centos youyinnn]<span class="hljs-comment">#</span>
</code></pre>
<p>它主要提供一下三个 lib：</p>
<pre><code class="hljs language-bash">/usr/lib64/libblas.so.3
/usr/lib64/libblas.so.3.4
/usr/lib64/libblas.so.3.4.2
</code></pre>
<p>然后 search 一下 blas：</p>
<pre><code class="hljs language-bash">[root@VM_16_214_centos youyinnn]<span class="hljs-comment"># yum search blas</span>
Loaded plugins: fastestmirror, langpacks
Repository epel is listed more than once <span class="hljs-keyword">in</span> the configuration
Loading mirror speeds from cached hostfile
==================================================================================== N/S matched: blas ====================================================================================
blas-devel.i686 : BLAS development libraries
blas-devel.x86_64 : BLAS development libraries
blas-static.i686 : BLAS static libraries
blas-static.x86_64 : BLAS static libraries
blas64-devel.x86_64 : BLAS development libraries
blas64-static.x86_64 : BLAS static libraries (64bit INTEGER)
...

[root@VM_16_214_centos youyinnn]<span class="hljs-comment">#</span>
</code></pre>
<p>得出的结果比较多，我们需要选择安装“blas-devel”，至于是否是 64 位系统的选择，就看你自己的机子了。</p>
<p>安装的“blas-devel”提供下面这个 lib：</p>
<pre><code class="hljs language-bash">/usr/lib64/libblas.so
</code></pre>
<p>PPT 还需要安装的是“libblas3gf”，但是这个玩意 centos 没有，好在我找到了对应的一个 rpm：<a href="https://altlinux.pkgs.org/sisyphus/classic-x86_64/libblas3gf-3.9.2-alt1.x86_64.rpm.html">https://altlinux.pkgs.org/sisyphus/classic-x86_64/libblas3gf-3.9.2-alt1.x86_64.rpm.html</a></p>
<p>所以我们要下载这个文件，然后使用 rpm 来安装它！</p>
<p>安装完了之后我们可以得到这个关键的 lib：</p>
<pre><code class="hljs language-bash">/usr/lib64/libblas.so.3gf
/usr/lib64/libblas.so.3gf.0
</code></pre>
<p>然后我们 BLAS 就安装完成了！</p>
<h4 id="安装-lapack-库">安装 LAPACK 库</h4>
<p>LAPACK 库需要安装：LAPACK (liblapack3gf, liblapack-dev)</p>
<p>直接 yum：</p>
<pre><code class="hljs language-bash">yum install lapack
</code></pre>
<p>会安装：</p>
<pre><code class="hljs language-bash">[root@VM_16_214_centos linux]<span class="hljs-comment"># yum install lapack</span>
Loaded plugins: fastestmirror, langpacks
Repository epel is listed more than once <span class="hljs-keyword">in</span> the configuration
Loading mirror speeds from cached hostfile
Package lapack-3.4.2-8.el7.x86_64 already installed and latest version
Nothing to <span class="hljs-keyword">do</span>
[root@VM_16_214_centos linux]<span class="hljs-comment">#</span>
</code></pre>
<p>它提供了：</p>
<pre><code class="hljs language-bash">/usr/lib64/liblapack.so.3
/usr/lib64/liblapack.so.3.4
/usr/lib64/liblapack.so.3.4.2
/usr/lib64/liblapacke.so.3
/usr/lib64/liblapacke.so.3.4
/usr/lib64/liblapacke.so.3.4.2
</code></pre>
<p>然后安装 liblapack3gf，这里巨坑的是，liblapack3gf 只有 Debian 系统有，连 rpm 都没有，开始是想把 deb
文件转成 rpm 文件的，直到后来 Escnqh 输入了一行玄学指令：</p>
<pre><code class="hljs language-bash"><span class="hljs-built_in">ln</span> -s /usr/lib64/liblapack.so.3 /usr/lib64/liblapack.so.3gf
</code></pre>
<p>直接用 liblapack.so.3 伪装成 liblapack.so.3gf（- -）...</p>
<p>最后 liblapack-dev 我反正没安装，后面好像也能跑出模型- -</p>
<p>支持 LAPACK 库也安装完毕。</p>
<hr>
