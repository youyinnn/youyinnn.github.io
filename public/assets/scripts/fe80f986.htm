<h2 id="vue">Vue</h2>
<p><img src="https://pagespeed-insights.herokuapp.com?url=https://ankurparihar.github.io" alt="alt text"></p>
<h3 id="vue-引入其他字体载导致页面第一次加载闪烁">Vue 引入其他字体载导致页面第一次加载闪烁</h3>
<ul>
<li><a href="https://segmentfault.com/a/1190000039796434">在 Vue.js 中加载字体的最佳做法</a></li>
<li><a href="https://stackoverflow.com/questions/56793406/vue-cli-correct-processing-of-link-rel-preload-prefetch">Vue-cli correct processing of &lt;link rel=&quot;preload/prefetch&quot;&gt;</a></li>
<li><a href="https://medium.com/geekculture/hot-reload-does-not-work-in-vue-cli-16ca8ead18be">Hot reload does not work in Vue CLI</a></li>
<li><a href="https://stackoverflow.com/questions/70363603/how-to-use-vue-cli-service-serve-on-http-2">How to use Vue-CLI-service serve on HTTP-2?</a></li>
</ul>
<h3 id="vue-动画过渡">Vue 动画过渡</h3>
<ol>
<li><p><a href="https://juejin.cn/post/6951540864787152927">用了很多动效，介绍 4 个很 Nice 的 Vue 路由过渡动效！</a></p>
<p>transition 得用这样的状态</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">transition</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slide-fade&quot;</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;out-in&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">transition</span>&gt;</span>
</code></pre>
<p>css 得用 enter</p>
<pre><code class="hljs language-css"><span class="hljs-selector-class">.fade-enter-active</span>,
<span class="hljs-selector-class">.fade-leave-active</span> {
  <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">0.3s</span>;
}

<span class="hljs-selector-class">.fade-enter</span>,
<span class="hljs-selector-class">.fade-leave-to</span> {
  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;
}

<span class="hljs-selector-class">.slide-fade-enter-active</span> {
  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span> ease;
}
<span class="hljs-selector-class">.slide-fade-leave-active</span> {
  <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span> ease;
}
<span class="hljs-selector-class">.slide-fade-enter</span>, <span class="hljs-selector-class">.slide-fade-leave-to</span>
<span class="hljs-comment">/* .slide-fade-leave-active for below version 2.1.8 */</span> {
  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translateX</span>(<span class="hljs-number">10px</span>);
  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;
}
</code></pre>
</li>
</ol>
<h4 id="vue3-troubleshoot">Vue3 Troubleshoot</h4>
<ol>
<li><a href="https://stackoverflow.com/questions/62023604/where-to-find-or-how-to-set-htmlwebpackplugin-options-title-in-project-created-w">where to find or how to set htmlWebpackPlugin.options.title in project created with vue cli 3?</a></li>
<li><a href="https://github.com/Yatoo2018/webpack-chain/tree/zh-cmn-Hans">webpack-chain 示例</a></li>
</ol>
<h3 id="vue3-动态渲染">Vue3 动态渲染</h3>
<pre><code class="hljs language-js">&lt;script&gt;
<span class="hljs-comment">/* eslint-disable no-unused-vars */</span>
<span class="hljs-keyword">import</span> imgRouter <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/plugins/img-router.js&quot;</span>;
<span class="hljs-keyword">import</span> { h, createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;
<span class="hljs-keyword">import</span> { <span class="hljs-title class_">NImage</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;naive-ui&quot;</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {
  <span class="hljs-attr">components</span>: {},
  <span class="hljs-title function_">render</span>(<span class="hljs-params"></span>) {
    <span class="hljs-keyword">return</span> <span class="hljs-title function_">h</span>(<span class="hljs-string">&quot;div&quot;</span>, {
      <span class="hljs-attr">id</span>: <span class="hljs-string">&quot;md&quot;</span>,
      <span class="hljs-attr">class</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">mdClass</span>,
      <span class="hljs-attr">key</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">key</span>,
    });
  },
  <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;content&quot;</span>, <span class="hljs-string">&quot;class&quot;</span>, <span class="hljs-string">&quot;key&quot;</span>],
  <span class="hljs-attr">mounted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">renderMd</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">content</span>);
  },
  <span class="hljs-attr">watch</span>: {
    <span class="hljs-comment">// when the content is load</span>
    <span class="hljs-attr">content</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">nV</span>) {
      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">renderMd</span>(nV);
    },
  },
  <span class="hljs-attr">computed</span>: {
    <span class="hljs-attr">mdClass</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">class</span> !== <span class="hljs-literal">null</span> &amp;&amp; <span class="hljs-variable language_">this</span>.<span class="hljs-property">class</span> !== <span class="hljs-literal">undefined</span>) {
        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">class</span>;
      }
      <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;article markdown-body editormd-html-preview animate__animated animate__fadeIn&quot;</span>;
    },
  },
  <span class="hljs-attr">methods</span>: {
    <span class="hljs-title function_">imgReplacement</span>(<span class="hljs-params">innerHTML</span>) {
      innerHTML = innerHTML.<span class="hljs-title function_">replaceAll</span>(<span class="hljs-string">&quot;&lt;img&quot;</span>, <span class="hljs-string">&quot;&lt;n-image&quot;</span>);
      <span class="hljs-keyword">var</span> unhandleImageTagStart = innerHTML.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;&lt;n-image&quot;</span>);
      <span class="hljs-keyword">const</span> unhandleImageTagStringList = [];
      <span class="hljs-keyword">while</span> (unhandleImageTagStart !== -<span class="hljs-number">1</span>) {
        <span class="hljs-keyword">var</span> unhandleImageTagEnd = innerHTML.<span class="hljs-title function_">indexOf</span>(
          <span class="hljs-string">&#x27;&quot;&gt;&#x27;</span>,
          unhandleImageTagStart + <span class="hljs-number">8</span>
        );
        unhandleImageTagStringList.<span class="hljs-title function_">push</span>(
          innerHTML.<span class="hljs-title function_">substring</span>(unhandleImageTagStart, unhandleImageTagEnd + <span class="hljs-number">2</span>)
        );
        unhandleImageTagStart = innerHTML.<span class="hljs-title function_">indexOf</span>(
          <span class="hljs-string">&quot;&lt;n-image&quot;</span>,
          unhandleImageTagEnd + <span class="hljs-number">2</span>
        );
      }
      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> item <span class="hljs-keyword">of</span> unhandleImageTagStringList) {
        innerHTML = innerHTML.<span class="hljs-title function_">replaceAll</span>(
          item,
          item.<span class="hljs-title function_">substring</span>(<span class="hljs-number">0</span>, item.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) + <span class="hljs-string">&quot;/&gt;&quot;</span>
        );
      }
      <span class="hljs-keyword">return</span> innerHTML;
    },
    <span class="hljs-title function_">renderMd</span>(<span class="hljs-params">c</span>) {
      <span class="hljs-keyword">if</span> (c === <span class="hljs-literal">null</span>) {
        <span class="hljs-keyword">return</span>;
      }
      <span class="hljs-comment">// pre route the img src before they actually render into the real dom</span>
      <span class="hljs-keyword">const</span> node = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DOMParser</span>().<span class="hljs-title function_">parseFromString</span>(c, <span class="hljs-string">&quot;text/html&quot;</span>);
      imgRouter.<span class="hljs-title function_">routeElements</span>(node.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;img&quot;</span>));
      <span class="hljs-keyword">var</span> innerHTML = node.<span class="hljs-property">children</span>[<span class="hljs-number">0</span>].<span class="hljs-property">children</span>[<span class="hljs-number">1</span>].<span class="hljs-property">innerHTML</span>;

      <span class="hljs-comment">// replace img with n-image</span>
      innerHTML = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">imgReplacement</span>(innerHTML);

      <span class="hljs-comment">// render it</span>
      <span class="hljs-keyword">const</span> body = {
        <span class="hljs-attr">template</span>: innerHTML,
        <span class="hljs-attr">components</span>: {
          <span class="hljs-title class_">NImage</span>,
        },
      };
      <span class="hljs-title function_">createApp</span>(body).<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#md&quot;</span>);
    },
  },
};
&lt;/script&gt;
</code></pre>
<p>使用这个组件：</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">markdown-body</span> <span class="hljs-attr">:content</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;$route.params.articleId&quot;</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>
</code></pre>
<h3 id="vue-监听窗口大小变化">Vue 监听窗口大小变化</h3>
<pre><code class="hljs language-js"><span class="hljs-attr">mounted</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">winHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getWinHeight</span>();
  <span class="hljs-variable language_">this</span>.<span class="hljs-property">winWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getWinWidth</span>();
  <span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span> = <span class="hljs-function">() =&gt;</span> {
    <span class="hljs-built_in">clearTimeout</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span>);
    <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer</span> = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">winHeight</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getWinHeight</span>();
      <span class="hljs-variable language_">this</span>.<span class="hljs-property">winWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getWinWidth</span>();
    }, <span class="hljs-number">300</span>);
  };
},
</code></pre>
<h3 id="vue-打包体积优化方案和-cdn">Vue 打包体积优化方案和 CDN</h3>
<p><a href="https://juejin.cn/post/6844904163327868941">https://juejin.cn/post/6844904163327868941</a></p>
<h3 id="vue-spa-和-githubpages-的配合">Vue SPA 和 GithubPages 的配合</h3>
<hr>
<p>2021 Solution for vue3 &amp; vue-cli:</p>
<p>Follow this with &quot;Basic instructions&quot;:</p>
<p><a href="https://github.com/rafgraph/spa-github-pages#usage-instructions">https://github.com/rafgraph/spa-github-pages#usage-instructions</a></p>
<p>no need to change <code>var pathSegmentsToKeep = 0;</code> the 404.html.</p>
<p>and then in the <code>vue.config.js</code>:</p>
<pre><code class="hljs language-javascript">  <span class="hljs-comment">// do not use &quot;./dist/&quot;</span>
  <span class="hljs-attr">publicPath</span>: <span class="hljs-string">&quot;/dist/&quot;</span>,
  <span class="hljs-comment">// make the index.html file place at the root of the repo</span>
  <span class="hljs-attr">indexPath</span>: <span class="hljs-string">&quot;../index.html&quot;</span>,
</code></pre>
<p>then the spa is good to go~</p>
<hr>
<p>在<a href="https://stackoverflow.com/a/70299225/17094075">stackoverflow</a>上的回答</p>
<h3 id="vite">Vite</h3>
<ul>
<li><a href="https://segmentfault.com/a/1190000041417219">vite 配置项目路径别名</a></li>
<li><a href="https://vueschool.io/lessons/installing-and-setting-up-vue-router-with-vite-vite-only">Vue Router 4 for Everyone</a></li>
</ul>
<h3 id="vue-router">Vue Router</h3>
<ul>
<li><a href="https://stackoverflow.com/questions/53126710/how-to-get-current-name-of-route-in-vue">How to get current name of route in Vue?</a></li>
</ul>
<h3 id="vuetify">Vuetify</h3>
<ul>
<li><a href="https://stackoverflow.com/questions/48937829/vuetify-component-v-form-is-not-responding-on-the-declared-submit-event-handler">Vuetify component v-form is not responding on the declared @submit event handler</a></li>
</ul>
